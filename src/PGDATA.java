/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author rajan_gp8cx31
 */
public class PGDATA extends javax.swing.JInternalFrame {

    /**
     * Creates new form PGDATA
     */
    Connection con;

    public PGDATA(Connection con) {
        initComponents();
        this.con = con;
        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rentField = new javax.swing.JTextField();
        roomField = new javax.swing.JTextField();
        rentfField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rButtonWashroomY = new javax.swing.JRadioButton();
        rButtonWashroomN = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        rButtonGeyserY = new javax.swing.JRadioButton();
        rButtonGeyserN = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        combo1 = new javax.swing.JComboBox<>();
        combo2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("ROOMNO");

        jLabel2.setText("RENT WITH FOOD");

        jLabel3.setText("RENT WITHOUT FOOD");

        jLabel4.setText("WASHROOM ATTACHED");

        buttonGroup1.add(rButtonWashroomY);
        rButtonWashroomY.setSelected(true);
        rButtonWashroomY.setText("YES");

        buttonGroup1.add(rButtonWashroomN);
        rButtonWashroomN.setText("NO");
        rButtonWashroomN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rButtonWashroomNActionPerformed(evt);
            }
        });

        jLabel5.setText("GEYSER");

        buttonGroup2.add(rButtonGeyserY);
        rButtonGeyserY.setSelected(true);
        rButtonGeyserY.setText("YES");
        rButtonGeyserY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rButtonGeyserYActionPerformed(evt);
            }
        });

        buttonGroup2.add(rButtonGeyserN);
        rButtonGeyserN.setText("NO");
        rButtonGeyserN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rButtonGeyserNActionPerformed(evt);
            }
        });

        jLabel6.setText("COOLING FACILITY");

        jLabel7.setText("BEDS");

        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "COOLER" }));

        combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("MODIFY");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rButtonWashroomY)
                                            .addComponent(rButtonGeyserY))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rButtonWashroomN)
                                            .addComponent(rButtonGeyserN)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(rentField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(combo1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(28, 28, 28))
                                            .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addGap(113, 113, 113)
                        .addComponent(roomField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addGap(62, 62, 62)
                        .addComponent(rentfField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(roomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rentfField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(rButtonWashroomY)
                            .addComponent(rButtonWashroomN))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(rButtonGeyserY)
                            .addComponent(rButtonGeyserN))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rButtonWashroomNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rButtonWashroomNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rButtonWashroomNActionPerformed

    private void rButtonGeyserNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rButtonGeyserNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rButtonGeyserNActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int row = jTable1.getSelectedRow();
        TableModel tm = jTable1.getModel();
        roomField.setText((String) tm.getValueAt(row, 0));
        rentfField.setText((String) tm.getValueAt(row, 1));
        rentField.setText((String) tm.getValueAt(row, 2));
        String washroom = (String) tm.getValueAt(row, 3);
        if (washroom.equalsIgnoreCase("yes")) {
            rButtonWashroomY.setSelected(true);
        } else {
            rButtonWashroomN.setSelected(true);
        }

        String geyser = (String) tm.getValueAt(row, 4);
        if (geyser.equalsIgnoreCase("yes")) {
            rButtonGeyserY.setSelected(true);
        } else {
            rButtonGeyserN.setSelected(true);
        }

        String cooling = (String) tm.getValueAt(row, 5);
        combo1.setSelectedItem(cooling);
        String beds = (String) tm.getValueAt(row, 6);
        combo2.setSelectedItem(beds);


    }//GEN-LAST:event_jTable1MouseClicked

    private void rButtonGeyserYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rButtonGeyserYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rButtonGeyserYActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Save();    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Modify();    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Delete();
    }//GEN-LAST:event_jButton3ActionPerformed

    void showData() {
        Vector heading = new Vector();
        heading.add("Roomno");
        heading.add("Rentwithfood");
        heading.add("Rentwithoutfood");
        heading.add("Attachedwashroom");
        heading.add("Geyser");
        heading.add("Cooligitem");
        heading.add("Beds");

        try {

            String sql = "select * from pgdata";
            PreparedStatement ps = con.prepareStatement(sql);
            Vector data = new Vector();
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString("roomno"));
                row.add(rs.getString("rentwithfood"));
                row.add(rs.getString("rentwithoutfood"));
                row.add(rs.getString("attachedwashroom"));
                row.add(rs.getString("geyser"));
                row.add(rs.getString("coolingitem"));
                row.add(rs.getString("beds"));

                data.add(row);

            }

            DefaultTableModel tm = new DefaultTableModel(data, heading);
            jTable1.setModel(tm);

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    void Save() {
        try {
            String roomno = roomField.getText();
            String rentf = rentfField.getText();
            String rent = rentField.getText();
            String washroom = "";
            if (rButtonWashroomY.isSelected()) {
                washroom = "Yes";
            } else {
                washroom = "No";

            }

            String geyser = "";
            if (rButtonGeyserY.isSelected()) {
                geyser = "Yes";
            } else {
                geyser = "No";

            }
            String cooling = (String) combo1.getSelectedItem();

            String beds = (String) combo2.getSelectedItem();

            if (roomno.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Roomno cannot be empty");
                return;
            }
            byte b[] = roomno.getBytes();

            for (int i = 0; i < b.length; i++) {
                if (b[i] < 48 || b[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in roomno!!!");
                    return;
                }
            }

            if (rentf.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "RentField cannot be empty");
                return;
            }

            byte b1[] = rentf.getBytes();

            for (int i = 0; i < b1.length; i++) {
                if (b1[i] < 48 || b1[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in rent field!!!");
                    return;
                }
            }

            if (rent.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "RentField cannot be empty");
                return;
            }
            byte b2[] = rent.getBytes();

            for (int i = 0; i < b2.length; i++) {
                if (b2[i] < 48 || b2[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in rent field!!!");

                    return;
                }
            }

            String sql = "insert into pgdata values(?,?,?,?,?,?,?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, roomno);
            ps.setString(2, rentf);
            ps.setString(3, rent);
            ps.setString(4, washroom);
            ps.setString(5, geyser);
            ps.setString(6, cooling);
            ps.setString(7, beds);

            int count = ps.executeUpdate();
            if (count > 0) {
                JOptionPane.showMessageDialog(this, count + "data inserted !!!");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        showData();
        clear();
    }

    void Modify() {
        try {
            String roomno = roomField.getText();
            String rentf = rentfField.getText();
            String rent = rentField.getText();
            String washroom = "";
            if (rButtonWashroomY.isSelected()) {
                washroom = "Yes";
            } else {
                washroom = "No";

            }

            String geyser = "";
            if (rButtonGeyserY.isSelected()) {
                geyser = "Yes";
            } else {
                geyser = "No";

            }
            String cooling = (String)combo1.getSelectedItem();
            

            String beds = (String)combo2.getSelectedItem();

            if (roomno.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Roomno cannot be empty");
                return;
            }
            byte b[] = roomno.getBytes();

            for (int i = 0; i < b.length; i++) {
                if (b[i] < 48 || b[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in roomno!!!");
                    return;
                }
            }

            if (rentf.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "RentField cannot be empty");
                return;
            }

            byte b1[] = rentf.getBytes();

            for (int i = 0; i < b1.length; i++) {
                if (b1[i] < 48 || b1[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in rent field!!!");
                    return;
                }
            }

            if (rent.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "RentField cannot be empty");
                return;
            }
            byte b2[] = roomno.getBytes();

            for (int i = 0; i < b2.length; i++) {
                if (b2[i] < 48 || b2[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in rent field!!!");

                    return;
                }
            }

            String sql = "update pgdata set rentwithfood=?,rentwithoutfood=?,attachedwashroom=?,geyser=?,coolingitem=?,beds=? where roomno=?";
            PreparedStatement ps = con.prepareStatement(sql);
           
            ps.setString(1, rentf);
            ps.setString(2, rent);
            ps.setString(3, washroom);
            ps.setString(4, geyser);
            ps.setString(5, cooling);
            ps.setString(6, beds);
            ps.setString(7, roomno);

            int count = ps.executeUpdate();
            if (count > 0) {
                JOptionPane.showMessageDialog(this, count + "data updated !!!");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        showData();
        clear();
    }

    void Delete() {
        try {
            String roomno = roomField.getText();

            if (roomno.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Roomno cannot be empty");
                return;
            }
            byte b[] = roomno.getBytes();

            for (int i = 0; i < b.length; i++) {
                if (b[i] < 48 || b[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in roomno!!!");
                    return;
                }
            }

            String sql = "delete from pgdata where roomno=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, roomno);

            int count = ps.executeUpdate();
            if (count > 0) {
                JOptionPane.showMessageDialog(this, count + "data deleted !!!");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        showData();
        clear();
    }

    void clear() {
        roomField.setText("");
        rentfField.setText("");
        rentField.setText("");
        rButtonWashroomY.setSelected(true);
        rButtonGeyserY.setSelected(true);
        combo1.setSelectedIndex(0);
        combo2.setSelectedIndex(0);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JComboBox<String> combo2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rButtonGeyserN;
    private javax.swing.JRadioButton rButtonGeyserY;
    private javax.swing.JRadioButton rButtonWashroomN;
    private javax.swing.JRadioButton rButtonWashroomY;
    private javax.swing.JTextField rentField;
    private javax.swing.JTextField rentfField;
    private javax.swing.JTextField roomField;
    // End of variables declaration//GEN-END:variables
}
