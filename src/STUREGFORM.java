
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author rajan_gp8cx31
 */
public class STUREGFORM extends javax.swing.JInternalFrame {

    /**
     * Creates new form STUREGFORM
     */
    String roomno, beds;

    public STUREGFORM(String roomno, String beds) {
        initComponents();
        this.roomno = roomno;
        this.beds = beds;

        showAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        roomnoField = new javax.swing.JTextField();
        bednoField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        fnameField = new javax.swing.JTextField();
        mnameField = new javax.swing.JTextField();
        noField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        bookField = new javax.swing.JTextField();
        comboRent = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressField = new javax.swing.JTextArea();
        rButtonGenderM = new javax.swing.JRadioButton();
        rButtonGenderF = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        stutable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        leaveField = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("ROOMNO");

        jLabel2.setText("BEDNO");

        jLabel3.setText("NAME");

        jLabel4.setText("FATHER NAME");

        jLabel5.setText("MOTHER NAME");

        jLabel6.setText("GENDER");

        jLabel7.setText("EMAIL");

        jLabel8.setText("CONTACT NO");

        jLabel9.setText("ADDRESS");

        jLabel10.setText("DATE OF BOOKING *dd/mm/yyyy ");

        jLabel12.setText("RENT");

        bednoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bednoFieldActionPerformed(evt);
            }
        });

        noField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noFieldActionPerformed(evt);
            }
        });

        comboRent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RENT+FOOD", "RENT" }));

        addressField.setColumns(20);
        addressField.setRows(5);
        jScrollPane1.setViewportView(addressField);

        buttonGroup1.add(rButtonGenderM);
        rButtonGenderM.setSelected(true);
        rButtonGenderM.setText("MALE");

        buttonGroup1.add(rButtonGenderF);
        rButtonGenderF.setText("FEMALE");

        jButton1.setText("BOOK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        stutable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        stutable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stutableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(stutable);

        jLabel13.setText("STUID");

        jButton2.setText("MODIFY+BOOK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel11.setText("DATE OF LEAVING *dd/mm/yyyy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(noField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bookField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(rButtonGenderM)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(rButtonGenderF))
                                            .addComponent(roomnoField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(bednoField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(jButton1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboRent, 0, 170, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(leaveField))))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(71, 71, 71))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(21, 21, 21))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(roomnoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(bednoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(mnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(rButtonGenderM)
                            .addComponent(rButtonGenderF))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(leaveField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(comboRent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(14, 14, 14))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bednoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bednoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bednoFieldActionPerformed

    private void noFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String name = nameField.getText();
            String fname = fnameField.getText();
            String mname = mnameField.getText();

            String gender = "";
            if (rButtonGenderM.isSelected()) {
                gender = "Male";
            } else {
                gender = "Female";

            }

            String email = emailField.getText();
            String no = noField.getText();
            String address = addressField.getText();
            String bookdate = bookField.getText();
            
            String rent = "";
            String status = "Booked";

            //Establish Connection
            //1. Initalize driver
            Class.forName("oracle.jdbc.OracleDriver");
            //2. Create connection String
            String str = "jdbc:oracle:thin:@localhost:1522:";
            //3. Open connection
            Connection con1 = DriverManager.getConnection(str, "Sharan", "pg");
            String sql = "select rentwithfood,rentwithoutfood from pgdata where roomno=? ";
            PreparedStatement ps1 = con1.prepareStatement(sql);
            ps1.setString(1, roomno);

            ResultSet rse = ps1.executeQuery();

            while (rse.next()) {
                String a1, a2;

                a1 = rse.getString("rentwithfood");
                a2 = rse.getString("rentwithoutfood");

                int rent1 = comboRent.getSelectedIndex();
                if (rent1 == 0) {
                    rent = a1;
                } else {
                    rent = a2;
                }
            }

            if (roomno.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Roomno cannot be empty");
                return;
            }
            byte b[] = roomno.getBytes();

            for (int i = 0; i < b.length; i++) {
                if (b[i] < 48 || b[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in roomno!!!");
                    return;
                }
            }
            String bedno = bednoField.getText();
            if (bedno.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Bedno cannot be empty");
                return;
            }

            byte b1[] = bedno.getBytes();

            for (int i = 0; i < b1.length; i++) {
                if (b1[i] < 48 || b1[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in bedno!!!");
                    return;
                }
            }

            boolean nameresult1 = isValidName.validname(name);
            if (nameresult1 == false) {
                JOptionPane.showMessageDialog(this, "Name is incorrect");
                return;
            }

            boolean nameresult2 = isValidName.validname(fname);
            if (nameresult2 == false) {
                JOptionPane.showMessageDialog(this, "Fathername is incorrect");
                return;
            }

            boolean nameresult3 = isValidName.validname(mname);
            if (nameresult3 == false) {
                JOptionPane.showMessageDialog(this, "Mothername is incorrect");
                return;
            }

            boolean numberresult = isValidNumber.validnumber(no);
            if (numberresult == false) {
                JOptionPane.showMessageDialog(this, "Contact number is incorrect");
                return;
            }

            if (address.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "address cannot be empty");
                return;
            }

            boolean emailresult = isValidEmail.validemail(email);
            if (emailresult == false) {
                JOptionPane.showMessageDialog(this, "Email is incorrect");
                return;
            }

            boolean dateresult = isValidDate.validdate(bookdate);
            if (dateresult == false) {
                JOptionPane.showMessageDialog(this, "Date of Booking is incorrect");
                return;
            }

            String sq2 = "insert into studentdata1 values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement ps = con1.prepareStatement(sq2);
            ps.setString(1, "0");
            ps.setString(2, roomno);
            ps.setString(3, beds);
            ps.setString(4, name);
            ps.setString(5, fname);
            ps.setString(6, mname);
            ps.setString(7, gender);
            ps.setString(8, email);
            ps.setString(9, no);
            ps.setString(10, address);
            ps.setString(11, bookdate);
            
            ps.setString(12, rent);
            ps.setString(13, status);
            ps.setString(14, "");

            int count = ps.executeUpdate();
            if (count > 0) {
                JOptionPane.showMessageDialog(this, count + "Room Successfully booked!!!");

                con1.close();
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        showAll();
        clearData();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String id = idField.getText();
            String name = nameField.getText();
            String fname = fnameField.getText();
            String mname = mnameField.getText();

            String gender = "";
            if (rButtonGenderM.isSelected()) {
                gender = "Yes";
            } else {
                gender = "No";

            }

            String email = emailField.getText();
            String no = noField.getText();
            String address = addressField.getText();
            String bookdate = bookField.getText();
            
            String rent = "";
            String status = "Booked";

            //Establish Connection
            //1. Initalize driver
            Class.forName("oracle.jdbc.OracleDriver");
            //2. Create connection String
            String str = "jdbc:oracle:thin:@localhost:1522:";
            //3. Open connection
            Connection con1 = DriverManager.getConnection(str, "Sharan", "pg");
            String sql = "select rentwithfood,rentwithoutfood from pgdata where roomno=? ";
            PreparedStatement ps1 = con1.prepareStatement(sql);
            ps1.setString(1, roomno);

            ResultSet rse = ps1.executeQuery();

            while (rse.next()) {
                String a1, a2;

                a1 = rse.getString("rentwithfood");
                a2 = rse.getString("rentwithoutfood");

                int rent1 = comboRent.getSelectedIndex();
                if (rent1 == 0) {
                    rent = a1;
                } else {
                    rent = a2;
                }
            }

            if (roomno.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Roomno cannot be empty");
                return;
            }
            byte b[] = roomno.getBytes();

            for (int i = 0; i < b.length; i++) {
                if (b[i] < 48 || b[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in roomno!!!");
                    return;
                }
            }
            String bedno = bednoField.getText();
            if (bedno.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Bedno cannot be empty");
                return;
            }

            byte b1[] = bedno.getBytes();

            for (int i = 0; i < b1.length; i++) {
                if (b1[i] < 48 || b1[i] > 57) {
                    JOptionPane.showMessageDialog(this, "Enter the numeric values in bedno!!!");
                    return;
                }
            }

            boolean nameresult1 = isValidName.validname(name);
            
            if (nameresult1 == false) {
                JOptionPane.showMessageDialog(this, "Name is incorrect");
                return;
            }

            boolean nameresult2 = isValidName.validname(fname);
            if (nameresult2 == false) {
                JOptionPane.showMessageDialog(this, "Fathername is incorrect");
                return;
            }

            boolean nameresult3 = isValidName.validname(mname);
            if (nameresult3 == false) {
                JOptionPane.showMessageDialog(this, "Mothername is incorrect");
                return;
            }

            boolean numberresult = isValidNumber.validnumber(no);
            if (numberresult == false) {
                JOptionPane.showMessageDialog(this, "Contact number is incorrect");
                return;
            }

            if (address.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "address cannot be empty");
                return;
            }

            boolean emailresult = isValidEmail.validemail(email);
            if (emailresult == false) {
                JOptionPane.showMessageDialog(this, "Email is incorrect");
                return;
            }

            boolean dateresult = isValidDate.validdate(bookdate);
            if (dateresult == false) {
                JOptionPane.showMessageDialog(this, "Date of Booking is incorrect");
                return;
            }

            String sq2 = "update studentdata1 set email=?,contactno=? where studentid=?";
            PreparedStatement ps = con1.prepareStatement(sq2);
            ps.setString(1, email);
            ps.setString(2, no);
            ps.setString(3, id);
            

            int count = ps.executeUpdate();
            if (count > 0) {
                JOptionPane.showMessageDialog(this, count + "Details successfully updated!!!");

                con1.close();
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        showAll();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void stutableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stutableMouseClicked
        int row = stutable.getSelectedRow();
        TableModel tm = stutable.getModel();
        idField.setText((String) tm.getValueAt(row, 0));
        roomnoField.setText((String) tm.getValueAt(row, 1));
        bednoField.setText((String) tm.getValueAt(row, 2));
        nameField.setText((String) tm.getValueAt(row, 3));
        fnameField.setText((String) tm.getValueAt(row, 4));
        mnameField.setText((String) tm.getValueAt(row, 5));

        String gender = (String) tm.getValueAt(row, 6);
        if (gender.equalsIgnoreCase("male")) {
            rButtonGenderM.setSelected(true);
        } else {
            rButtonGenderF.setSelected(true);
        }
        emailField.setText((String) tm.getValueAt(row, 7));
        noField.setText((String) tm.getValueAt(row, 8));
        addressField.setText((String) tm.getValueAt(row, 9));
        bookField.setText((String) tm.getValueAt(row, 10));

        String beds = (String) tm.getValueAt(row, 12);
        leaveField.setText((String) tm.getValueAt(row, 13));
        comboRent.setSelectedItem(beds);


    }//GEN-LAST:event_stutableMouseClicked

    void showAll() {
        roomnoField.setText(roomno);
        bednoField.setText(beds);

        Vector heading = new Vector();
        heading.add("StuId");
        heading.add("Roomno");
        heading.add("BedNo");
        heading.add("Name");
        heading.add("FatherName");
        heading.add("MotherName");
        heading.add("Gender");
        heading.add("Email");
        heading.add("ContactNo");
        heading.add("Address");
        heading.add("DateOfBooking");
        
        heading.add("Rent");
        heading.add("Status");
        heading.add("DateOfLeaving");

        try {
            //Establish Connection
//1. Initalize driver
            Class.forName("oracle.jdbc.OracleDriver");
//2. Create connection String
            String str = "jdbc:oracle:thin:@localhost:1522:";
//3. Open connection
            Connection con1 = DriverManager.getConnection(str, "Sharan", "pg");

            String sql = "select * from studentdata1";
            PreparedStatement ps = con1.prepareStatement(sql);
            Vector data = new Vector();
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString("studentid"));
                row.add(rs.getString("roomno"));
                row.add(rs.getString("bedno"));
                row.add(rs.getString("name"));
                row.add(rs.getString("fathername"));
                row.add(rs.getString("mothername"));
                row.add(rs.getString("gender"));
                row.add(rs.getString("email"));
                row.add(rs.getString("contactno"));
                row.add(rs.getString("address"));
                row.add(rs.getString("dateofbooking"));
                
                row.add(rs.getString("rent"));
                row.add(rs.getString("status"));
                row.add(rs.getString("dateofleaving"));

                data.add(row);

            }

            DefaultTableModel tm = new DefaultTableModel(data, heading);
            stutable.setModel(tm);
            con1.close();

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    void clearData() {
        idField.setText("");
        roomnoField.setText("");
        bednoField.setText("");
        nameField.setText("");
        fnameField.setText("");
        mnameField.setText("");
        rButtonGenderM.setSelected(true);
        emailField.setText("");
        noField.setText("");
        addressField.setText("");
        bookField.setText("");
        
        
        comboRent.setSelectedIndex(0);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea addressField;
    private javax.swing.JTextField bednoField;
    private javax.swing.JTextField bookField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboRent;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField fnameField;
    private javax.swing.JTextField idField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField leaveField;
    private javax.swing.JTextField mnameField;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField noField;
    private javax.swing.JRadioButton rButtonGenderF;
    private javax.swing.JRadioButton rButtonGenderM;
    private javax.swing.JTextField roomnoField;
    private javax.swing.JTable stutable;
    // End of variables declaration//GEN-END:variables
}
