
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author rajan_gp8cx31
 */
public class MANAGERENT extends javax.swing.JInternalFrame {

    /**
     * Creates new form MANAGERENT
     */
    String date = "";
    String rent = "";
    String month = "";
    String year = "";
    int monthno = 0;
    int a=0;
    int b=0;

    public MANAGERENT() {
        initComponents();
        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboMonth = new javax.swing.JComboBox<>();
        comboYear = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("STUDENT ID");

        jLabel2.setText("MONTH");

        jLabel3.setText("YEAR");

        comboMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", " " }));

        comboYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("SHOW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("PAY RENT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String id = idField.getText();
            
              //Establish Connection
            //1. Initalize driver
            Class.forName("oracle.jdbc.OracleDriver");
            //2. Create connection String
            String str = "jdbc:oracle:thin:@localhost:1522:";
            //3. Open connection
            Connection con = DriverManager.getConnection(str, "Sharan", "pg");
            String q6 = "select * from studentdata1 where studentid=?";
            PreparedStatement ps6 = con.prepareStatement(q6);
            ps6.setString(1, id);
           
            ResultSet rs6 = ps6.executeQuery();
            if (rs6.next()) {
            
            String q = "select month,year from rent where studentid=? order by rentid desc";
            PreparedStatement ps = con.prepareStatement(q);
            ps.setString(1, id);
           
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                month = rs.getString("month");
                year = rs.getString("year");
                a=1;
                b=1;
                //System.out.println(month + " " + year);

            }
            if(month.equals("")&&year.equals(""))
            {
                saveData();
            }
            else
            {if(a==1 && b==1)
            {String mon[] = {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"};
            for (int i = 0; i < mon.length; i++) {
                if (mon[i].equals(month)) {
                    monthno = i;
                }
            }
            int yearno = Integer.parseInt(year);

            Calendar c = Calendar.getInstance();
            c.set(Calendar.MONTH, monthno);
            if (monthno > 11) {
                c.set(Calendar.YEAR, yearno);
            }
            c.set(Calendar.DATE, 1);

            Date d = c.getTime();
            //System.out.println(d);

            c.add(Calendar.MONTH, 1);

//         c=Calendar.getInstance();
//        c.set(Calendar.MONTH,monthno);
//        c.set(Calendar.YEAR,yearno);
//        c.set(Calendar.DATE,1);
            Date c1 = c.getTime();
            //System.out.println(c1);

            SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
            String x = f.format(c1);
            String setMonth = calDetails.cal(x);
            //System.out.println(setMonth);
            String setYear = calDetails1.cal(x);
            //System.out.println(setYear);
            
            String q1 = "select dateofbooking,rent from studentdata1 where studentid=?";
            PreparedStatement ps1 = con.prepareStatement(q1);
            ps1.setString(1, id);
            ResultSet rs1 = ps1.executeQuery();

            while (rs1.next()) {
                date = rs1.getString("dateofbooking");
                rent = rs1.getString("rent");
                //System.out.println(date);
                //System.out.println(rent);

            }

            
            comboMonth.setSelectedItem(setMonth);
            comboYear.setSelectedItem(setYear);}}
            
            }
            
            else
            {
                JOptionPane.showMessageDialog(this, "Invalid ID");
            }
        con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        enterData();
    }//GEN-LAST:event_jButton2ActionPerformed

    void saveData() {
        try {
            String id = idField.getText();
            //Establish Connection
            //1. Initalize driver
            Class.forName("oracle.jdbc.OracleDriver");
            //2. Create connection String
            String str = "jdbc:oracle:thin:@localhost:1522:";
            //3. Open connection
            Connection con = DriverManager.getConnection(str, "Sharan", "pg");
            String q = "select dateofbooking,rent from studentdata1 where studentid=?";
            PreparedStatement ps = con.prepareStatement(q);
            ps.setString(1, id);
            ResultSet rs = ps.executeQuery();

           if (rs.next()) {
                date = rs.getString("dateofbooking");
                rent = rs.getString("rent");
                //System.out.println(date);
                //System.out.println(rent);

            }
//           else
//            {
//                JOptionPane.showMessageDialog(this, "Invalid studentid");
//                return;
//            }
            String month = calDetails.cal(date);
            //System.out.println(month);
            String year = calDetails1.cal(date);
            //System.out.println(year);

            comboMonth.setSelectedItem(month);
            comboYear.setSelectedItem(year);
         con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    void showData() {
        Vector heading = new Vector();
        heading.add("Rentid");
        heading.add("Studentid");
        heading.add("Rent");
        heading.add("BookDate");
        heading.add("Month");
        heading.add("Year");
        heading.add("Status");

        try {
            //Establish Connection
            //1. Initalize driver
            Class.forName("oracle.jdbc.OracleDriver");
            //2. Create connection String
            String str = "jdbc:oracle:thin:@localhost:1522:";
            //3. Open connection
            Connection con = DriverManager.getConnection(str, "Sharan", "pg");
            String sql = "select * from rent";
            PreparedStatement ps = con.prepareStatement(sql);
            Vector data = new Vector();
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString("rentid"));
                row.add(rs.getString("studentid"));
                row.add(rs.getString("rent"));
                row.add(rs.getString("dateofbooking"));
                row.add(rs.getString("month"));
                row.add(rs.getString("year"));
                row.add(rs.getString("status"));

                data.add(row);

            }

            DefaultTableModel tm = new DefaultTableModel(data, heading);
            jTable1.setModel(tm);
         con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    void enterData() {
        try {
            String stuid = idField.getText();

            String month = (String) comboMonth.getSelectedItem();

            String year = (String) comboYear.getSelectedItem();

            if (stuid.trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Studentid cannot be empty");
                return;
            }

            //Establish Connection
            //1. Initalize driver
            Class.forName("oracle.jdbc.OracleDriver");
            //2. Create connection String
            String str = "jdbc:oracle:thin:@localhost:1522:";
            //3. Open connection
            Connection con = DriverManager.getConnection(str, "Sharan", "pg");
            String sql = "insert into rent values(?,?,?,?,?,?,?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, "0");
            ps.setString(2, stuid);
            ps.setString(3, rent);
            ps.setString(4, date);
            ps.setString(5, month);
            ps.setString(6, year);
            ps.setString(7, "Paid");

            int count = ps.executeUpdate();
            if (count > 0) {
                JOptionPane.showMessageDialog(this, count + " data inserted !!!");
            }
         con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        showData();

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboMonth;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JTextField idField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
